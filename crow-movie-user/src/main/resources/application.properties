### web
server.port=9091
server.servlet.context-path=/movie-user

### resources
spring.mvc.static-path-pattern=/static/**
spring.resources.static-locations=classpath:/static/

### freemarker
spring.freemarker.templateLoaderPath=classpath:/views/
spring.freemarker.suffix=.ftl
spring.freemarker.charset=UTF-8
spring.freemarker.request-context-attribute=request
spring.freemarker.settings.number_format=0.##########

### 注意，多数据源一定将spring.datasource.db1.url改为spring.datasource.db1.jdbc-url
### movie, datasource
spring.datasource.primary.jdbc-url=jdbc:mysql://127.0.0.1:3306/movie?Unicode=true&characterEncoding=UTF-8
spring.datasource.primary.username=movie_com
spring.datasource.primary.password=3xNrCp2sWtjHxtp2
spring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.primary.tomcat.max-wait=10000
spring.datasource.primary.tomcat.max-active=100
spring.datasource.primary.tomcat.test-on-borrow=true

### movie, datasource
spring.datasource.secondary.jdbc-url=jdbc:mysql://127.0.0.1:3306/movie?Unicode=true&characterEncoding=UTF-8
spring.datasource.secondary.username=movie_com
spring.datasource.secondary.password=3xNrCp2sWtjHxtp2
spring.datasource.secondary.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.secondary.tomcat.max-wait=10000
spring.datasource.secondary.tomcat.max-active=5
spring.datasource.secondary.tomcat.test-on-borrow=true

spring.jpa.database=MYSQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.open-in-view=true

### 批量插入与更新
spring.jpa.properties.hibernate.jdbc.batch_size=4
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true

### 统计
spring.jpa.properties.hibernate.generate_statistics=true


### 地址白名单
movie.user.excludeUrl=/resources,/404,/403,/attack,/error,/noright,/fail,/isAlive,/logout,/demo
movie.user.ip=127.0.0.1
movie.user.allowRefererEmpty=no

### 密码加盐
movie.user.salt=cf7a3889-05d0-4db4-b910-4cef9929e30c

#取值(1（默认）|2|3)
#1的应用场景：根据客户端的选择进行校验，如果客户端选择了证书，则与服务端证书编号进行匹配;如果客户端没有选择证书则不匹配。
#2的应用场景：服务端给客户端已经颁发了证书，则客户端必须选中匹配的证书进行登录校验，如果没有颁发证书，则不需要使用证书校验。
#3的应用场景：服务端强制使用证书校验，没有证书则不通过
certLevel=1

#证书验证错误页面，如certificationLevel为1则该项无需配置
#如：certErrorPageUrl=/pages/error/certError.jsf
certErrorPageUrl=
